version: '3.9'


x-common-settings: &common-settings
  build:
    context: .
    dockerfile: ./deploy/Dockerfile
  env_file:
  - .env
  environment:
    NSAPP_HOST: 0.0.0.0
    NSAPP_DB__HOST: ns_app-db
    NSAPP_DB__PORT: 5432
    NSAPP_DB__USER: ns_app
    NSAPP_DB__PASSWORD: ns_app
    NSAPP_DB__BASE: ns_app
    NSAPP_REDIS__HOST: ns_app-redis
    NSAPP_SPARK__MASTER: spark://spark:7077
  networks:
  - ns_app_network


services:
  api:
    <<: *common-settings
    restart: always
    command: python -m ns_app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      dramatiq:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully

  dramatiq:
    <<: *common-settings
    restart: always
    image: ns_app_worker:${NSAPP_VERSION:-latest}
    command: dramatiq ns_app.workers.tasks  --processes 1 --threads 1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      # migrator:
        # condition: service_completed_successfully
    healthcheck:
      test: "pidof -x dramatiq"
      interval: 2s
      timeout: 3s
      retries: 40

  migrator:
    <<: *common-settings
    restart: "no"
    command: aerich upgrade
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:13.8-bullseye
    hostname: ns_app-db
    environment:
      POSTGRES_PASSWORD: "ns_app"
      POSTGRES_USER: "ns_app"
      POSTGRES_DB: "ns_app"
    volumes:
    - ns_app-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U ns_app
      interval: 2s
      timeout: 3s
      retries: 40
    networks:
    - ns_app_network

  redis:
    image: bitnami/redis:6.2.5
    hostname: "ns_app-redis"
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    healthcheck:
      test: redis-cli ping
      interval: 2s
      timeout: 3s
      retries: 40
    networks:
    - ns_app_network

  spark:
    <<: *common-settings
    environment:
    - SPARK_MODE=master
    - SPARK_MASTER_HOST=spark
    - SPARK_MASTER_PORT=7077
    - SPARK_WORKER_MEMORY=1G
    - SPARK_WORKER_CORES=1
    - SPARK_RPC_AUTHENTICATION_ENABLED=no
    - SPARK_RPC_ENCRYPTION_ENABLED=no
    - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
    - SPARK_SSL_ENABLED=no
    - SPARK_USER=spark
    - SPARK_PUBLIC_DNS=localhost

  spark-worker:
    <<: *common-settings
    environment:
    - SPARK_MODE=worker
    - SPARK_MASTER_URL=spark://spark:7077
    - SPARK_RPC_AUTHENTICATION_ENABLED=no
    - SPARK_RPC_ENCRYPTION_ENABLED=no
    - SPARK
    - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
    - SPARK_SSL_ENABLED=no
    - SPARK_USER=spark
    - SPARK_PUBLIC_DNS=localhost
    networks:
    - ns_app_network

volumes:
  ns_app-db-data:
    name: ns_app-db-data


networks:
  ns_app_network:
    driver: bridge
